import React, { useState, useEffect } from "react";
import axios from "axios";
import { Link, useNavigate } from "react-router-dom";
import { Button, Card, Container, Spinner, Row, Col, Alert } from "react-bootstrap";

const PostList = () => {
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const [alertMessage, setAlertMessage] = useState("");
  const navigate = useNavigate();

  // Hi·ªÉn th·ªã alert n·∫øu c√≥ th√¥ng b√°o t·ª´ localStorage
  useEffect(() => {
    const message = localStorage.getItem("alertMessage");
    if (message) {
      setAlertMessage(message);
      localStorage.removeItem("alertMessage");

      // T·ª± ƒë·ªông ·∫©n alert sau 3 gi√¢y
      setTimeout(() => {
        setAlertMessage("");
      }, 3000);
    }
  }, []);

  // Fetch d·ªØ li·ªáu khi component mount
  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await axios.get("http://localhost:3001/posts");
        setData(response.data);
        setLoading(false);
      } catch (error) {
        console.error("L·ªói khi l·∫•y d·ªØ li·ªáu:", error);
        setError("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu. Vui l√≤ng th·ª≠ l·∫°i sau.");
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  // H√†m x√≥a b√†i vi·∫øt c√≥ x√°c nh·∫≠n
  const handleDelete = async (id) => {
    const confirm = window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a b√†i vi·∫øt n√†y?");
    if (!confirm) return;

    try {
      await axios.delete(`http://localhost:3001/posts/${id}`);
      setData(data.filter((post) => post.id !== id));
      localStorage.setItem("alertMessage", "üóëÔ∏è B√†i vi·∫øt ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng!");
      navigate(0); // reload l·∫°i trang hi·ªán t·∫°i
    } catch (error) {
      console.error("L·ªói khi x√≥a b√†i vi·∫øt:", error);
      setError("X√≥a kh√¥ng th√†nh c√¥ng. Vui l√≤ng th·ª≠ l·∫°i.");
    }
  };

  if (loading) return <Spinner animation="border" className="m-3" />;

  return (
    <Container className="mt-4">
      <h2 className="mb-4">Danh s√°ch b√†i vi·∫øt</h2>

      {alertMessage && <Alert variant="success">{alertMessage}</Alert>}
      {error && <Alert variant="danger">{error}</Alert>}

      <div className="d-flex justify-content-end mb-3">
        <Button as={Link} to="/create" variant="primary">
          T·∫°o b√†i vi·∫øt m·ªõi
        </Button>
      </div>

      <Row>
        {data.map((post) => (
          <Col md={6} lg={4} key={post.id} className="mb-4">
            <Card>
              <Card.Body>
                <Card.Title>{post.title}</Card.Title>
                <Card.Text>{post.content}</Card.Text>
                <div className="d-flex justify-content-between">
                  <Button as={Link} to={`/edit/${post.id}`} variant="warning">
                    Ch·ªânh s·ª≠a
                  </Button>
                  <Button variant="danger" onClick={() => handleDelete(post.id)}>
                    X√≥a
                  </Button>
                </div>
              </Card.Body>
            </Card>
          </Col>
        ))}
      </Row>
    </Container>
  );
};

export default PostList;
